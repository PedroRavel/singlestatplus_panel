{"version":3,"sources":["../src/orderBar.js"],"names":["$","init","plot","orderedBarSeries","nbOfBarsToOrder","borderWidth","borderWidthInXabsWidth","pixelInXWidthEquivalent","isHorizontal","reOrderBars","serie","datapoints","shiftedPoints","serieNeedToBeReordered","checkIfGraphIsHorizontal","calculPixel2XWidthConvert","retrieveBarSeries","calculBorderAndBarWidth","position","findPosition","decallage","centerBarShift","calculCenterBarShift","isBarAtLeftOfCenter","sumWidth","Math","floor","ceil","shiftPoints","points","bars","show","order","gridDimSize","getPlaceholder","innerHeight","innerWidth","minMaxValues","getAxeMinMaxValues","getData","AxeSize","series","AxeIdx","Array","i","length","data","findOthersBarsToReOrders","retSeries","push","sort","sortByOrder","serie1","serie2","x","y","lineWidth","horizontal","pos","width","barWidth","start","end","totalWidth","dx","ps","pointsize","j","hooks","processDatapoints","options","plugins","name","version","jQuery"],"mappings":"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","file":"orderBar.js","sourcesContent":["/*\r\n * Flot plugin to order bars side by side.\r\n * \r\n * Released under the MIT license by Benjamin BUFFET, 20-Sep-2010.\r\n *\r\n * This plugin is an alpha version.\r\n *\r\n * To activate the plugin you must specify the parameter \"order\" for the specific serie :\r\n *\r\n *  $.plot($(\"#placeholder\"), [{ data: [ ... ], bars :{ order = null or integer }])\r\n *\r\n * If 2 series have the same order param, they are ordered by the position in the array;\r\n *\r\n * The plugin adjust the point by adding a value depanding of the barwidth\r\n * Exemple for 3 series (barwidth : 0.1) :\r\n *\r\n *          first bar dÃ©calage : -0.15\r\n *          second bar dÃ©calage : -0.05\r\n *          third bar dÃ©calage : 0.05\r\n *\r\n */\r\n\r\n(function($){\r\n    function init(plot){\r\n        var orderedBarSeries;\r\n        var nbOfBarsToOrder;\r\n        var borderWidth;\r\n        var borderWidthInXabsWidth;\r\n        var pixelInXWidthEquivalent = 1;\r\n        var isHorizontal = false;\r\n\r\n        /*\r\n         * This method add shift to x values\r\n         */\r\n        function reOrderBars(plot, serie, datapoints){\r\n            var shiftedPoints = null;\r\n            \r\n            if(serieNeedToBeReordered(serie)){                \r\n                checkIfGraphIsHorizontal(serie);\r\n                calculPixel2XWidthConvert(plot);\r\n                retrieveBarSeries(plot);\r\n                calculBorderAndBarWidth(serie);\r\n                \r\n                if(nbOfBarsToOrder >= 2){  \r\n                    var position = findPosition(serie);\r\n                    var decallage = 0;\r\n                    \r\n                    var centerBarShift = calculCenterBarShift();\r\n\r\n                    if (isBarAtLeftOfCenter(position)){\r\n                        decallage = -1*(sumWidth(orderedBarSeries,position-1,Math.floor(nbOfBarsToOrder / 2)-1)) - centerBarShift;\r\n                    }else{\r\n                        decallage = sumWidth(orderedBarSeries,Math.ceil(nbOfBarsToOrder / 2),position-2) + centerBarShift + borderWidthInXabsWidth*2;\r\n                    }\r\n\r\n                    shiftedPoints = shiftPoints(datapoints,serie,decallage);\r\n                    datapoints.points = shiftedPoints;\r\n               }\r\n           }\r\n           return shiftedPoints;\r\n        }\r\n\r\n        function serieNeedToBeReordered(serie){\r\n            return serie.bars != null\r\n                && serie.bars.show\r\n                && serie.bars.order != null;\r\n        }\r\n\r\n        function calculPixel2XWidthConvert(plot){\r\n            var gridDimSize = isHorizontal ? plot.getPlaceholder().innerHeight() : plot.getPlaceholder().innerWidth();\r\n            var minMaxValues = isHorizontal ? getAxeMinMaxValues(plot.getData(),1) : getAxeMinMaxValues(plot.getData(),0);\r\n            var AxeSize = minMaxValues[1] - minMaxValues[0];\r\n            pixelInXWidthEquivalent = AxeSize / gridDimSize;\r\n        }\r\n\r\n        function getAxeMinMaxValues(series,AxeIdx){\r\n            var minMaxValues = new Array();\r\n            for(var i = 0; i < series.length; i++){\r\n                minMaxValues[0] = series[i].data[0][AxeIdx];\r\n                minMaxValues[1] = series[i].data[series[i].data.length - 1][AxeIdx];\r\n            }\r\n            return minMaxValues;\r\n        }\r\n\r\n        function retrieveBarSeries(plot){\r\n            orderedBarSeries = findOthersBarsToReOrders(plot.getData());\r\n            nbOfBarsToOrder = orderedBarSeries.length;\r\n        }\r\n\r\n        function findOthersBarsToReOrders(series){\r\n            var retSeries = new Array();\r\n\r\n            for(var i = 0; i < series.length; i++){\r\n                if(series[i].bars.order != null && series[i].bars.show){\r\n                    retSeries.push(series[i]);\r\n                }\r\n            }\r\n\r\n            return retSeries.sort(sortByOrder);\r\n        }\r\n\r\n        function sortByOrder(serie1,serie2){\r\n            var x = serie1.bars.order;\r\n            var y = serie2.bars.order;\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n        }\r\n\r\n        function  calculBorderAndBarWidth(serie){\r\n            borderWidth = serie.bars.lineWidth ? serie.bars.lineWidth  : 2;\r\n            borderWidthInXabsWidth = borderWidth * pixelInXWidthEquivalent;\r\n        }\r\n        \r\n        function checkIfGraphIsHorizontal(serie){\r\n            if(serie.bars.horizontal){\r\n                isHorizontal = true;\r\n            }\r\n        }\r\n\r\n        function findPosition(serie){\r\n            var pos = 0\r\n            for (var i = 0; i < orderedBarSeries.length; ++i) {\r\n                if (serie == orderedBarSeries[i]){\r\n                    pos = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return pos+1;\r\n        }\r\n\r\n        function calculCenterBarShift(){\r\n            var width = 0;\r\n\r\n            if(nbOfBarsToOrder%2 != 0)\r\n                width = (orderedBarSeries[Math.ceil(nbOfBarsToOrder / 2)].bars.barWidth)/2;\r\n\r\n            return width;\r\n        }\r\n\r\n        function isBarAtLeftOfCenter(position){\r\n            return position <= Math.ceil(nbOfBarsToOrder / 2);\r\n        }\r\n\r\n        function sumWidth(series,start,end){\r\n            var totalWidth = 0;\r\n\r\n            for(var i = start; i <= end; i++){\r\n                totalWidth += series[i].bars.barWidth+borderWidthInXabsWidth*2;\r\n            }\r\n\r\n            return totalWidth;\r\n        }\r\n\r\n        function shiftPoints(datapoints,serie,dx){\r\n            var ps = datapoints.pointsize;\r\n            var points = datapoints.points;\r\n            var j = 0;           \r\n            for(var i = isHorizontal ? 1 : 0;i < points.length; i += ps){\r\n                points[i] += dx;\r\n                //Adding the new x value in the serie to be abble to display the right tooltip value,\r\n                //using the index 3 to not overide the third index.\r\n                serie.data[j][3] = points[i];\r\n                j++;\r\n            }\r\n\r\n            return points;\r\n        }\r\n\r\n        plot.hooks.processDatapoints.push(reOrderBars);\r\n\r\n    }\r\n\r\n    var options = {\r\n        series : {\r\n            bars: {order: null} // or number/string\r\n        }\r\n    };\r\n\r\n    $.plot.plugins.push({\r\n        init: init,\r\n        options: options,\r\n        name: \"orderBars\",\r\n        version: \"0.2\"\r\n    });\r\n\r\n})(jQuery);\r\n[\"\"]"]}